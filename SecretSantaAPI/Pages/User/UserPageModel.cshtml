@page
@model SecretSantaAPI.Pages.User.UserPageModel
@{
    ViewData["Title"] = "User Page";
    Layout = "~/Pages/Shared/_AdminLayout.cshtml";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <style>
        
        body {
            background-color: rgb(212, 0, 36) !important; /* Dark Green */
            color: white;
        }

        h2, h3 {
            color: #FFD700; /* Gold */
        }

        .navbar {
            background-color: transparent !important;
        }

        .navbar-brand {
            color: red !important;
            font-weight: bold;
        }
        .textarea{
            color: white !important;
            background-color: black !important;
        }
        .container {
            flex: 1;
            background-color: rgb(44, 88, 64); /* Forest Green */
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
            color: white; /* Ensure text inside the container is white */
        }

        .list-group-item {
            background-color: darkred; /* Light Goldenrod Yellow */
            color: black;
            border: 1px solid #FFD700;
        }

      
        .btn-primary {
            background-color: #FFD700 !important; /* Gold */
            border-color: #bba520;
            color: black;
        }

            .btn-primary:hover {
                background-color: #FFCC00 !important; /* Slightly darker gold on hover */
            }

        .btn-secondary {
            background-color: #006400 !important; /* Dark Green */
            border-color: #004d00;
            color: white;
        }

            .btn-secondary:hover {
                background-color: #004d00 !important; /* Darker green on hover */
            }

        table {
            border: 2px solid white;
            border-radius: 10px;
        }

        th {
            background-color: #006400 !important; /* Dark Green */
            color: white;
        }

        tr:nth-child(even) {
            background-color:red; 
            color: black; 
        }

        tr:nth-child(odd) {
            background-color: red;
            color: black;
        }

        input[type="text"], input[type="number"], textarea {
            background-color: #D3D3D3;
            color: black;
        }

            input[type="text"]:focus, input[type="number"]:focus, textarea:focus {
                border-color: #FFD700;
                background-color: #FFFACD;
            }

        input[readonly] {
            background-color: #F0E68C;
            color: black;
        }

        .small-text {
            font-size: 0.9rem;
            color: #ddd;
        }

        .form-lable{
            background-color:red !important;
        }

        form .form-label {
            color: black !important;
        }

        .row mt-4{
            background-color: red !important;
        }

        .mb-3.textarea{
            background-color:red !important;
        }

    </style>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" />
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <a class="navbar-brand" href="#">Secret Santa</a>
    </nav>
    <div class="container mt-4">
        <h2>Welcome to your account, <b>@Model.UserViewModel.FirstName @Model.UserViewModel.LastName</b></h2>

        <div class="row mt-4">
            <div class="col-md-6">
                <h3>Secret Santa Groups</h3>
                @if (Model.CreatedGroups.Any())
                {
                    <ul class="list-group">
                        @foreach (var group in Model.CreatedGroups)
                        {
                            <li class="list-group-item">
                                <h5>@group.GroupName</h5>
                                <p>@group.GroupDescription</p>
                                <p><strong>Location:</strong> @group.GroupLocation</p>
                                <p><strong>Budget:</strong> @group.MinBudget - @group.MaxBudget</p>

                                <form method="post">
                                    <input type="hidden" name="InvitationToken" value="@group.InvitationToken" />
                                    <button type="submit" class="btn btn-primary">Start Draw</button>
                                </form>

                                @if (Model.IsGroupOwner)
                                {
                                    <div class="mt-2">
                                        <label>Invitation Link:</label>
                                        <div class="input-group mt-2">
                                            <input type="text"
                                                   class="form-control"
                                                   value="@($"{Request.Scheme}://{Request.Host}/Groups/JoinGroup?token={group.InvitationToken}")"
                                                   readonly />
                                            <button type="button" class="btn btn-secondary btn-sm" onclick="copyToClipboard(this)">
                                                Copy Link
                                            </button>
                                        </div>
                                        <small class="text-muted">Share this link to invite users to the group.</small>
                                    </div>
                                }
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p>You have not created any groups yet.</p>
                }
            </div>

            <!-- Secret Santa Groups User Participates In -->
            <div class="col-md-6">
                <h3>Your Secret Santa Groups</h3>

                @if (Model.ParticipatingGroups.Any())
                {
                    <ul class="list-group">
                        @foreach (var group in Model.ParticipatingGroups)
                        {
                            <li class="list-group-item">
                                <h5>@group.GroupName</h5>
                                <p>@group.GroupDescription</p>
                                <p><strong>Location:</strong> @group.GroupLocation</p>
                                <p><strong>Budget:</strong> @group.MinBudget - @group.MaxBudget</p>
                                <p>
                                    <strong>Receiver's Name:</strong>
                                    @{
                                        var receiver = Model.groupInfos?.FirstOrDefault(gi => gi.GroupInfoID == group.GroupID);
                                        if (receiver != null)
                                        {
                                            <span>@receiver.ReceiverFirstName @receiver.ReceiverLastName</span>
                                        }
                                        else
                                        {
                                            <span>Not Assigned</span>
                                        }
                                    }
                                </p>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p>You are not participating in any groups yet.</p>
                }
            </div>
        </div>

        <!-- Button to add a new group -->
        <div class="row mt-4">
            <div class="col-md-6 offset-md-3">
                <h3>Create a New Group</h3>
                <form method="post" asp-page-handler="AddGroup">
                    <div class="mb-3">
                        <label for="GroupName" class="form-label">Group Name</label>
                        <input type="text" class="form-control" id="GroupName" name="groupName" required />
                    </div>
                    <div class="mb-3">
                        <style>
                            .mb-3{

                            }
                        </style>
                        <label for="GroupDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="GroupDescription" name="groupDescription"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="GroupLocation" class="form-label">Location</label>
                        <input type="text" class="form-control" id="GroupLocation" name="groupLocation" />
                    </div>
                    <div class="mb-3">
                        <label for="MinBudget" class="form-label">Minimum Budget</label>
                        <input type="number" class="form-control" id="MinBudget" name="minBudget" required />
                    </div>
                    <div class="mb-3">
                        <label for="MaxBudget" class="form-label">Maximum Budget</label>
                        <input type="number" class="form-control" id="MaxBudget" name="maxBudget" required />
                    </div>
                    <button type="submit" class="btn btn-primary">Add Group</button>
                </form>
            </div>
        </div>
    </div>

    <script>
        function copyToClipboard(button) {
            const input = button.previousElementSibling;
            input.select();
            input.setSelectionRange(0, 99999); // For mobile devices
            navigator.clipboard.writeText(input.value)
                .then(() => {
                    button.textContent = "Copied!";
                    setTimeout(() => button.textContent = "Copy Link", 2000);
                })
                .catch(err => alert("Failed to copy the link"));
        }
    </script>
</body>
</html>
