@page
@model SecretSantaAPI.Pages.LoginPage.LoginModel
@{
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">

    <style>
        .field-icon {
            cursor: pointer;
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            z-index: 2;
        }

        .password-container {
            position: relative;
            display: flex;
            align-items: center;
        }

        .form-control {
            width: 100%;
            padding-right: 35px;
        }

        .container {
            padding-top: 50px;
            margin: auto;
            max-width: 400px;
        }

        #error-message {
            color: red;
            font-weight: bold;
            margin-top: 10px;
        }

    </style>
</head>
<body>
    <div class="container">
        <h2 class="my-5">Login</h2>

        <form method="post">
            @Html.AntiForgeryToken()
            <div class="form-group">
                <label for="Email">Email Address</label>
                <input type="email" class="form-control" id="Email" name="Email" value="@Model.Input.Email" required />
                <span class="text-danger">@Model.EmailError</span>
            </div>

            <div class="form-group">
                <label for="Password">Password</label>
                <div class="password-container">
                    <input type="password" class="form-control" id="Password" name="Password" required />
                    <span id="togglePassword" class="fa fa-fw fa-eye field-icon"></span>
                </div>
                <div id="error-message" class="text-danger" style="display:none;"> </div>
                <span class="text-danger" id="passwordError">@Model.PasswordError</span>
            </div>

       

            <div class="form-group form-check">
                <input type="checkbox" class="form-check-input" id="RememberMe" name="RememberMe">
                <label class="form-check-label" for="RememberMe">Remember me</label>
            </div>

            <button id="loginBtn" type="submit" class="btn btn-primary">Login</button>

            <div class="mt-3">
                <a href="/RegisterPage/Register">Don't have an account? Register here</a>
            </div>
        </form>
    </div>

    <!-- JavaScript -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const togglePassword = document.getElementById("togglePassword");
            const passwordInput = document.getElementById("Password");
            const loginForm = document.querySelector("form");
            const errorMessage = document.getElementById("error-message");

            if (togglePassword && passwordInput) {
                togglePassword.addEventListener("click", function () {
                    if (passwordInput.type === "password") {
                        passwordInput.type = "text";
                        this.classList.remove("fa-eye");
                        this.classList.add("fa-eye-slash");
                    } else {
                        passwordInput.type = "password";
                        this.classList.remove("fa-eye-slash");
                        this.classList.add("fa-eye");
                    }
                });
            }

            if (loginForm) {
                loginForm.addEventListener("submit", async function (event) {
                    event.preventDefault(); // Prevent form from submitting normally

                    // Get user input values
                    const email = document.getElementById("Email").value;
                    const password = document.getElementById("Password").value;

                    // Hide any previous error message
                    errorMessage.style.display = "none";
                    errorMessage.textContent = "";

                    // Validate input
                    if (!email || !password) {
                        errorMessage.textContent = "Email and password are required.";
                        errorMessage.style.display = "block";
                        return;
                    }

                    try {
                        const response = await fetch("/api/login", {
                            method: "POST",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify({ Email: email, Password: password })
                        });

                        const result = await response.json();

                        if (result.IsSuccess) {
                            window.location.href = "/dashboard";
                        } else {
                            // If login fails, display the error message
                            errorMessage.textContent = result.ErrorMsg || "Invalid email or password.";
                            errorMessage.style.display = "block";
                        }
                    } catch (error) {
                        // Handle unexpected errors (e.g., network issues)
                        errorMessage.textContent = "An error occurred. Please try again.";
                        errorMessage.style.display = "block";
                    }
                });
            }
        });

    </script>


    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</body>
</html>
